name: DevOps Pipeline Test

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-test-containerize:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            cmake g++ make \
            uuid-dev libseccomp-dev pkg-config squashfs-tools cryptsetup \
            sshpass dos2unix curl wget

      - name: Install Go (for Singularity build)
        run: |
          wget -O go.tar.gz https://dl.google.com/go/go1.17.3.linux-amd64.tar.gz
          sudo tar -C /usr/local -xzf go.tar.gz
          echo "/usr/local/go/bin" >> $GITHUB_PATH

      - name: Install Singularity
        run: |
          wget https://github.com/hpcng/singularity/releases/download/v3.8.7/singularity-3.8.7.tar.gz
          tar -xzf singularity-3.8.7.tar.gz
          cd singularity-3.8.7
          ./mconfig && make -C builddir && sudo make -C builddir install
          cd ..

      - name: Build & test with Google Test
        run: |
          mkdir -p build
          cmake -S . -B build
          cmake --build build
          ./build/test_grayscale

      - name: Build Singularity image
        run: |
          sudo singularity build grayscale.sif Singularity.def

      - name: Upload output and .sif
        uses: actions/upload-artifact@v4
        with:
          name: grayscale.sif
          path: grayscale.sif

      - name: Prepare job.sh
        run: dos2unix job.sh || true

      - name: Add remote cluster to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SLURM_HOST }} >> ~/.ssh/known_hosts

      - name: Transfer files to Galileo100
        run: |
          sshpass -p "${{ secrets.SLURM_PASSWORD }}" scp \
            -o StrictHostKeyChecking=no \
            grayscale.sif job.sh \
            ${{ secrets.SLURM_USER }}@${{ secrets.SLURM_HOST }}:~/seproject/

      - name: Submit SLURM job
        run: |
          sshpass -p "${{ secrets.SLURM_PASSWORD }}" ssh \
            -o StrictHostKeyChecking=no \
            ${{ secrets.SLURM_USER }}@${{ secrets.SLURM_HOST }} \
            "cd ~/seproject && sbatch job.sh"