name: DevOps Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DEBUG_PIPE: 1          # enables bash tracing everywhere

jobs:
  build-test-containerize:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install build dependencies
        run: |
          set -euo pipefail
          sudo apt-get update -qq
          sudo apt-get install -y \
            cmake g++ make \
            uuid-dev libseccomp-dev pkg-config squashfs-tools cryptsetup \
            dos2unix curl wget openssh-client

      - name: Install Singularity 3.8.7
        run: |
          set -euo pipefail
          wget -q https://github.com/hpcng/singularity/releases/download/v3.8.7/singularity-3.8.7.tar.gz
          tar -xzf singularity-3.8.7.tar.gz
          cd singularity-3.8.7
          ./mconfig
          make -C builddir
          sudo make -C builddir install
          singularity --version

      - name: Build native binaries
        run: ./build.sh

      - name: Run host unit tests
        run: ./build/test_grayscale

      - name: Build Singularity image
        run: |
          sudo singularity build grayscale.sif Singularity.def
          sha256sum grayscale.sif

      - name: Upload Singularity image
        uses: actions/upload-artifact@v4
        with:
          name: grayscale.sif
          path: grayscale.sif
          retention-days: 5

      - name: Prepare scripts for POSIX line endings
        run: dos2unix job.sh Singularity.def || true

      - name: Configure SSH for Galileo100
        env:
          SLURM_HOST: ${{ secrets.SLURM_HOST }}
          SLURM_USER: ${{ secrets.SLURM_USER }}
          SSH_PRIV:  ${{ secrets.SLURM_PRIVATE_KEY }}
          SSH_PUB:   ${{ secrets.SSH_PUBLIC_KEY }}
          SSH_CERT:  ${{ secrets.SSH_CERTIFICATE }}
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          echo "$SSH_PRIV"  > ~/.ssh/id_ed25519
          echo "$SSH_PUB"   > ~/.ssh/id_ed25519.pub
          echo "$SSH_CERT"  > ~/.ssh/id_ed25519-cert.pub
          chmod 600 ~/.ssh/id_ed25519
          chmod 644 ~/.ssh/id_ed25519.pub ~/.ssh/id_ed25519-cert.pub

          cat > ~/.ssh/config <<EOF
          Host galileo
              HostName $SLURM_HOST
              User $SLURM_USER
              IdentityFile ~/.ssh/id_ed25519
              CertificateFile ~/.ssh/id_ed25519-cert.pub
              IdentitiesOnly yes
              StrictHostKeyChecking no
              UserKnownHostsFile /dev/null
          EOF

      - name: Copy artefacts to Galileo100
        run: |
          scp -F ~/.ssh/config grayscale.sif job.sh Singularity.def galileo:~/seproject/

      - name: Submit SLURM job
        run: |
          ssh -F ~/.ssh/config galileo "cd ~/seproject && sbatch job.sh"

      - name: Wait for SLURM job to finish
        run: sleep 60

      - name: Fetch SLURM logs
        run: |
          scp -F ~/.ssh/config galileo:~/seproject/grayscale_output_*.log .
          ls -l grayscale_output_*.log

      - name: Show job output
        if: always()
        run: cat grayscale_output_*.log || true

      - name: Upload SLURM logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: slurm-logs
          path: grayscale_output_*.log
