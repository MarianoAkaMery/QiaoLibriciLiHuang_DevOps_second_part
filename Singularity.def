Bootstrap: docker
From: ubuntu:22.04

%labels
    Author "Yibo"
    Version "1.3"   # logging integration

%environment
    export APP_SRC=/opt/app_src
    export APP_TMP=/tmp/grayscale_build
    export PATH=${APP_TMP}/build:$PATH
    log () { printf '\033[1;36m[%s] %s\033[0m\n' "$(date +'%F %T')" "$*"; }

%post
    # dash (the default /bin/sh) does not support “pipefail”
    set -eu
    log () { printf '\033[1;35m[%s] %s\033[0m\n' "$(date +'%F %T')" "$*"; }
    [[ "${DEBUG_PIPE:-0}" == "1" ]] && set -x
    trap 'log "Leaving %post with status $?"' EXIT

    log "Installing toolchain …"
    apt-get update -qq
    apt-get install -y --no-install-recommends \
        build-essential cmake git libgtest-dev
    rm -rf /var/lib/apt/lists/*

    log "Building GoogleTest …"
    cd /usr/src/gtest
    cmake -DCMAKE_CXX_FLAGS='-fPIC' .
    make -j"$(nproc)"
    cp lib/libgtest*.a /usr/lib

    log "Staging application sources …"
    mkdir -p "${APP_SRC}"

%files
    CMakeLists.txt            /opt/app_src/
    include/                  /opt/app_src/
    src/                      /opt/app_src/
    test/                     /opt/app_src/
    input/                    /opt/app_src/
    build.sh                  /opt/app_src/
    convert_ppm.py            /opt/app_src/
    random_gen_images.py      /opt/app_src/
    LICENSE                   /opt/app_src/

%runscript
#!/bin/bash
    set -euo pipefail
    log () { printf '\033[1;36m[%s] %s\033[0m\n' "$(date +'%F %T')" "$*"; }
    [[ "${DEBUG_PIPE:-0}" == "1" ]] && set -x

    log "Launching grayscale conversion inside container …"

    # One-time compilation, cached in $APP_TMP
    if [ ! -x "$APP_TMP/build/convert_grayscale" ]; then
        log "First-time build – compiling sources"
        mkdir -p "$APP_TMP"
        cp -r "$APP_SRC"/* "$APP_TMP/"

        cd "$APP_TMP"
        rm -rf build CMakeCache.txt
        chmod +x build.sh
        ./build.sh
        log "Build completed."
    fi

    exec "$APP_TMP/build/convert_grayscale" "$@"
